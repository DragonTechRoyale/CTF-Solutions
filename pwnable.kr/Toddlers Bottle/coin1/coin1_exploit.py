import time
import more_itertools as mit
from pwn import *
from py_console import console


def filer_string_to_int(string) -> int:
    # fuck regx
    numeric_filter = filter(str.isdigit, string)
    numeric_string = "".join(numeric_filter)
    return int(numeric_string)

def send_payload(payload, r) -> str:
    payload = str(payload)
    console.info(f"[*] payload: {payload}")
    r.sendline(bytes(payload.encode()))
    sum_string = r.recv().decode()
    print(sum_string)
    return sum_string


def create_list(num) -> list:
    return_list = []
    return_list_len = (num // 100) + 1
    
    for i in range(return_list_len):
        tmp = []
        if i + 1 == return_list_len:
            for i in range(return_list_len - i * 100):
                tmp.append(i)
        else:
            for i in range(i * 100, (i * 100) + 100):
                tmp.append(i)
        return_list.append(tmp)
    
    return return_list
    
def split_list(a_list):
    half = len(a_list)//2
    return a_list[:half], a_list[half:]
    

def main():
    context(arch = 'i386', os = 'linux')

    r = remote('pwnable.kr', 9007)
    # EXPLOIT CODE GOES HERE
    print(r.recv().decode())
    time.sleep(3)

    while True:
        NC = r.recv().decode()
        print(NC)
        
        N_coins = filer_string_to_int(NC.split(' ')[0])
        C_chances = filer_string_to_int(NC.split(' ')[1])
        
        if N_coins < 1000:
            payload_list = create_list(N_coins)
        for i in range(C_chances):
            is_nine = False
            fake_coin = 0
            if not is_nine:
                if N_coins < 100:
                    payload = ""
                    for i in range(N_coins):
                        payload += str(i)
                        if i + 1 != N_coins:
                            payload += " "
                    send_payload(payload, r)
                elif N_coins < 1000:
                    payload = ""
                    if payload_list != []:
                        payload_list_row = payload_list.pop(0)
                        for num in payload_list_row:
                            payload += str(num)
                            if payload_list_row[-1] != num:
                                payload += " "
                    else:
                        payload = "0"
                    sum_string = send_payload(payload, r)
                    if int(sum_string) % 10 != 0:
                        if int(sum_string) == 9:
                            fake_coin = int(payload)
                            break
                        console.success("*****")
                        first_half, second_half = split_list(payload_list_row)
                        payload_list = [first_half, second_half]
                else:
                    console.error("[-] ???")
            else:
                send_payload(fake_coin, r)
                
                
            
                
if __name__ == '__main__':
    main()